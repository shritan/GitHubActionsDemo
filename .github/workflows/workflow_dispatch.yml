name: Manual Trigger Workflow
'on':
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        type: choice
        options:
          - dev
          - test
          - stage
          - prod
        default: test
      region:
        description: Region
        required: true
        type: choice
        options:
          - eastus
          - westus
        default: eastus

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      rg: ${{ steps.variables.outputs.rg }}
      lap: ${{ steps.variables.outputs.lap }}
      scriptPath: ${{ steps.variables.outputs.scriptPath }}
      startDate: ${{ steps.cherwellinit.outputs.date }}
      environApproval: ${{ steps.variables.outputs.environmentApproval }}
    steps:
      - name: Print - Inputs
        run: |
          echo "Global Workflow Inputs: ${{ toJSON(github.event.inputs) }}"
          echo "Local Workflow Inputs: ${{ toJSON(inputs) }}"

      - name: Check out repository
        uses: actions/checkout@v4

      - name: List files in the directory
        run: ls -R

      - name: Setup - Fetch ${{ github.event.inputs.environment }} Configs
        id: config-env
        uses: ActionsTools/read-json-action@main
        with:
          file_path: config-terraform.json
          prop_path: ${{ github.event.inputs.environment }}

      - name: Setup - Variables
        id: variables
        run: |
          if [[ "${{ github.event.inputs.region }}" == "eastus" ]]; then
            echo "rg=${{ steps.config-env.outputs.RG_EASTUS }}" >> $GITHUB_OUTPUT
            echo "lap=${{ steps.config-env.outputs.LAP_EASTUS }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.region }}" == "westus" ]]; then
            echo "rg=${{ steps.config-env.outputs.RG_WESTUS }}" >> $GITHUB_OUTPUT
            echo "lap=${{ steps.config-env.outputs.LAP_WESTUS }}" >> $GITHUB_OUTPUT
          fi

          if [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            echo "environmentApproval=Development Approve" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.environment }}" == "test" ]]; then
            echo "environmentApproval=Test Approve" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.environment }}" == "stage" ]]; then
            echo "environmentApproval=Stage Approve" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.environment }}" == "prod" ]]; then
            echo "environmentApproval=Production Approve" >> $GITHUB_OUTPUT
          fi

          echo "scriptPath=${{ steps.config-env.outputs.SCRIPTS_PATH }}" >> $GITHUB_OUTPUT

      - name: Print - Variables
        run: |
          echo "rg: ${{ steps.variables.outputs.rg }}"
          echo "lap: ${{ steps.variables.outputs.lap }}"
          echo "Env: ${{ steps.variables.outputs.environmentApproval }}"
          echo "scriptPath: ${{ steps.variables.outputs.scriptPath }}"
          echo "Inputs: ${{ toJSON(github.event.inputs) }}"

  trigger-azure-upload-lapstd-workflow:
    name: Deploy Workflows
    needs: setup
    uses: .github/workflows/azure-upload-lapstd-workflow.yml@main
    with:
      environment: ${{ needs.setup.outputs.environApproval }}
      resourceGroup: ${{ needs.setup.outputs.rg }}
      logicAppStd: ${{ needs.setup.outputs.lap }}
      pathScripts: ${{ needs.setup.outputs.scriptPath }}
    secrets:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  post:
    name: Post
    needs: [setup, trigger-azure-upload-lapstd-workflow]
    runs-on: ubuntu-latest
    if: ${{ contains(needs['trigger-azure-upload-lapstd-workflow'].result, 'success') }}
    defaults:
      run:
        shell: bash
    outputs:
      endDate: ${{ steps.variables.outputs.date }}
      version: ${{ steps.variables.outputs.version }}
      branch: ${{ steps.variables.outputs.branch }}
    steps:
      - name: Setup - Variables
        id: variables
        run: |
          if [[ "${{ github.event.inputs.environment }}" == *"test"* || "${{ github.event.inputs.environment }}" == *"stage"* ]]; then
            echo "date=$(date --date='62 seconds' +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
            echo "version=v${GITHUB_REF##*/*-}" >> $GITHUB_OUTPUT
            echo "branch=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

      - name: Print - Variables
        run: |
          if [[ "${{ github.event.inputs.environment }}" == *"test"* || "${{ github.event.inputs.environment }}" == *"stage"* ]]; then
            echo "End Time: ${{ steps.variables.outputs.date }}"
            echo "Branch Version: ${{ steps.variables.outputs.version }}"
            echo "Branch Name: ${{ steps.variables.outputs.branch }}"
          fi

          echo "Inputs: ${{ toJSON(github.event.inputs) }}"
          echo "Github Ref: ${GITHUB_REF}"
